{"version": 3, "mappings": "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", "sources": ["RPSAlgorithm1.py"], "names": ["input", "limit", "beat", "moves", "pScore", "numPre", "centrifuge", "centripete", "soma", "rps", "a", "best", "length", "p", "random", "random.choice", "m", "numMeta", "mScore", "pp", "i", "bpp", "bbpp", "output", "soma[centrifuge[(input + output)]]", "rps[centripete[input]]", "moves[0]", "moves[1]", "moves[2]", "j", "min", "y", "moves[y].rfind", "moves[0].rfind", "best.index", "max", "pScore[i].index", "pScore[(i + 1)].index", "random.randint"], "sourcesContent": ["import random\nnumPre = 30\nnumMeta = 6\nif not input:\n    limit = 8\n    beat={'R':'P','P':'S','S':'R'}\n    moves=['','','','']\n    pScore=[[5]*numPre,[5]*numPre,[5]*numPre,[5]*numPre,[5]*numPre,[5]*numPre]\n    centrifuge={'RP':0,'PS':1,'SR':2,'PR':3,'SP':4,'RS':5,'RR':6,'PP':7,'SS':8}\n    centripete={'R':0,'P':1,'S':2}\n    soma = [0,0,0,0,0,0,0,0,0];\n    rps = [1,1,1];\n    a=\"RPS\"\n    best = [0,0,0];\n    length=0\n    p=[random.choice(\"RPS\")]*numPre\n    m=[random.choice(\"RPS\")]*numMeta\n    mScore=[5,2,5,2,4,2]\nelse:\n    for i in range(numPre):\n        pp = p[i]\n        bpp = beat[pp]\n        bbpp = beat[bpp]\n        pScore[0][i]=0.9*pScore[0][i]+((input==pp)-(input==bbpp))*3\n        pScore[1][i]=0.9*pScore[1][i]+((output==pp)-(output==bbpp))*3\n        pScore[2][i]=0.87*pScore[2][i]+(input==pp)*3.3-(input==bpp)*1.2-(input==bbpp)*2.3\n        pScore[3][i]=0.87*pScore[3][i]+(output==pp)*3.3-(output==bpp)*1.2-(output==bbpp)*2.3\n        pScore[4][i]=(pScore[4][i]+(input==pp)*3)*(1-(input==bbpp))\n        pScore[5][i]=(pScore[5][i]+(output==pp)*3)*(1-(output==bbpp))\n    for i in range(numMeta):\n        mScore[i]=0.96*(mScore[i]+(input==m[i])-(input==beat[beat[m[i]]]))\n    soma[centrifuge[input+output]] +=1;\n    rps[centripete[input]] +=1;\n    moves[0]+=str(centrifuge[input+output])\n    moves[1]+=input\n    moves[2]+=output\n    length+=1\n    for y in range(3):\n        j=min([length,limit])\n        while j>=1 and not moves[y][length-j:length] in moves[y][0:length-1]:\n            j-=1\n        i = moves[y].rfind(moves[y][length-j:length],0,length-1)\n        p[0+2*y] = moves[1][j+i] \n        p[1+2*y] = beat[moves[2][j+i]]\n    j=min([length,limit])\n    while j>=2 and not moves[0][length-j:length-1] in moves[0][0:length-2]:\n        j-=1\n    i = moves[0].rfind(moves[0][length-j:length-1],0,length-2)\n    if j+i>=length:\n        p[6] = p[7] = random.choice(\"RPS\")\n    else:\n        p[6] = moves[1][j+i] \n        p[7] = beat[moves[2][j+i]]\n        \n    best[0] = soma[centrifuge[output+'R']]*rps[0]/rps[centripete[output]]\n    best[1] = soma[centrifuge[output+'P']]*rps[1]/rps[centripete[output]]\n    best[2] = soma[centrifuge[output+'S']]*rps[2]/rps[centripete[output]]\n    p[8] = p[9] = a[best.index(max(best))]\n    \n    for i in range(10,numPre):\n        p[i]=beat[beat[p[i-10]]]\n        \n    for i in range(0,numMeta,2):\n        m[i]=       p[pScore[i  ].index(max(pScore[i  ]))]\n        m[i+1]=beat[p[pScore[i+1].index(max(pScore[i+1]))]]\noutput = beat[m[mScore.index(max(mScore))]]\nif max(mScore)<0.07 or random.randint(3,40)>length:\n    output=beat[random.choice(\"RPS\")]"]}